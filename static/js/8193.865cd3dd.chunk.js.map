{"version":3,"file":"static/js/8193.865cd3dd.chunk.js","mappings":"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","sources":["views/dashboard/Dashboard.js","views/widgets/WidgetsBrand.js","views/widgets/WidgetsDropdown.js"],"sourcesContent":["import React from 'react'\n\nimport {\n  CAvatar,\n  CButton,\n  CButtonGroup,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CProgress,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport { CChartLine } from '@coreui/react-chartjs'\nimport { getStyle, hexToRgba } from '@coreui/utils'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cibCcAmex,\n  cibCcApplePay,\n  cibCcMastercard,\n  cibCcPaypal,\n  cibCcStripe,\n  cibCcVisa,\n  cibGoogle,\n  cibFacebook,\n  cibLinkedin,\n  cifBr,\n  cifEs,\n  cifFr,\n  cifIn,\n  cifPl,\n  cifUs,\n  cibTwitter,\n  cilCloudDownload,\n  cilPeople,\n  cilUser,\n  cilUserFemale,\n} from '@coreui/icons'\n\nimport avatar1 from 'src/assets/images/avatars/1.jpg'\nimport avatar2 from 'src/assets/images/avatars/2.jpg'\nimport avatar3 from 'src/assets/images/avatars/3.jpg'\nimport avatar4 from 'src/assets/images/avatars/4.jpg'\nimport avatar5 from 'src/assets/images/avatars/5.jpg'\nimport avatar6 from 'src/assets/images/avatars/6.jpg'\n\nimport WidgetsBrand from '../widgets/WidgetsBrand'\nimport WidgetsDropdown from '../widgets/WidgetsDropdown'\n\nconst Dashboard = () => {\n  const random = (min, max) => Math.floor(Math.random() * (max - min + 1) + min)\n\n  const progressExample = [\n    { title: 'Visits', value: '29.703 Users', percent: 40, color: 'success' },\n    { title: 'Unique', value: '24.093 Users', percent: 20, color: 'info' },\n    { title: 'Pageviews', value: '78.706 Views', percent: 60, color: 'warning' },\n    { title: 'New Users', value: '22.123 Users', percent: 80, color: 'danger' },\n    { title: 'Bounce Rate', value: 'Average Rate', percent: 40.15, color: 'primary' },\n  ]\n\n  const progressGroupExample1 = [\n    { title: 'Monday', value1: 34, value2: 78 },\n    { title: 'Tuesday', value1: 56, value2: 94 },\n    { title: 'Wednesday', value1: 12, value2: 67 },\n    { title: 'Thursday', value1: 43, value2: 91 },\n    { title: 'Friday', value1: 22, value2: 73 },\n    { title: 'Saturday', value1: 53, value2: 82 },\n    { title: 'Sunday', value1: 9, value2: 69 },\n  ]\n\n  const progressGroupExample2 = [\n    { title: 'Male', icon: cilUser, value: 53 },\n    { title: 'Female', icon: cilUserFemale, value: 43 },\n  ]\n\n  const progressGroupExample3 = [\n    { title: 'Organic Search', icon: cibGoogle, percent: 56, value: '191,235' },\n    { title: 'Facebook', icon: cibFacebook, percent: 15, value: '51,223' },\n    { title: 'Twitter', icon: cibTwitter, percent: 11, value: '37,564' },\n    { title: 'LinkedIn', icon: cibLinkedin, percent: 8, value: '27,319' },\n  ]\n\n  const tableExample = [\n    {\n      avatar: { src: avatar1, status: 'success' },\n      user: {\n        name: 'Yiorgos Avraamu',\n        new: true,\n        registered: 'Jan 1, 2021',\n      },\n      country: { name: 'USA', flag: cifUs },\n      usage: {\n        value: 50,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'success',\n      },\n      payment: { name: 'Mastercard', icon: cibCcMastercard },\n      activity: '10 sec ago',\n    },\n    {\n      avatar: { src: avatar2, status: 'danger' },\n      user: {\n        name: 'Avram Tarasios',\n        new: false,\n        registered: 'Jan 1, 2021',\n      },\n      country: { name: 'Brazil', flag: cifBr },\n      usage: {\n        value: 22,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'info',\n      },\n      payment: { name: 'Visa', icon: cibCcVisa },\n      activity: '5 minutes ago',\n    },\n    {\n      avatar: { src: avatar3, status: 'warning' },\n      user: { name: 'Quintin Ed', new: true, registered: 'Jan 1, 2021' },\n      country: { name: 'India', flag: cifIn },\n      usage: {\n        value: 74,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'warning',\n      },\n      payment: { name: 'Stripe', icon: cibCcStripe },\n      activity: '1 hour ago',\n    },\n    {\n      avatar: { src: avatar4, status: 'secondary' },\n      user: { name: 'Enéas Kwadwo', new: true, registered: 'Jan 1, 2021' },\n      country: { name: 'France', flag: cifFr },\n      usage: {\n        value: 98,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'danger',\n      },\n      payment: { name: 'PayPal', icon: cibCcPaypal },\n      activity: 'Last month',\n    },\n    {\n      avatar: { src: avatar5, status: 'success' },\n      user: {\n        name: 'Agapetus Tadeáš',\n        new: true,\n        registered: 'Jan 1, 2021',\n      },\n      country: { name: 'Spain', flag: cifEs },\n      usage: {\n        value: 22,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'primary',\n      },\n      payment: { name: 'Google Wallet', icon: cibCcApplePay },\n      activity: 'Last week',\n    },\n    {\n      avatar: { src: avatar6, status: 'danger' },\n      user: {\n        name: 'Friderik Dávid',\n        new: true,\n        registered: 'Jan 1, 2021',\n      },\n      country: { name: 'Poland', flag: cifPl },\n      usage: {\n        value: 43,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'success',\n      },\n      payment: { name: 'Amex', icon: cibCcAmex },\n      activity: 'Last week',\n    },\n  ]\n\n  return (\n    <>\n      <WidgetsDropdown />\n      <CCard className=\"mb-4\">\n        <CCardBody>\n          <CRow>\n            <CCol sm={5}>\n              <h4 id=\"traffic\" className=\"card-title mb-0\">\n                Traffic\n              </h4>\n              <div className=\"small text-medium-emphasis\">January - July 2021</div>\n            </CCol>\n            <CCol sm={7} className=\"d-none d-md-block\">\n              <CButton color=\"primary\" className=\"float-end\">\n                <CIcon icon={cilCloudDownload} />\n              </CButton>\n              <CButtonGroup className=\"float-end me-3\">\n                {['Day', 'Month', 'Year'].map((value) => (\n                  <CButton\n                    color=\"outline-secondary\"\n                    key={value}\n                    className=\"mx-0\"\n                    active={value === 'Month'}\n                  >\n                    {value}\n                  </CButton>\n                ))}\n              </CButtonGroup>\n            </CCol>\n          </CRow>\n          <CChartLine\n            style={{ height: '300px', marginTop: '40px' }}\n            data={{\n              labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n              datasets: [\n                {\n                  label: 'My First dataset',\n                  backgroundColor: hexToRgba(getStyle('--cui-info'), 10),\n                  borderColor: getStyle('--cui-info'),\n                  pointHoverBackgroundColor: getStyle('--cui-info'),\n                  borderWidth: 2,\n                  data: [\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                  ],\n                  fill: true,\n                },\n                {\n                  label: 'My Second dataset',\n                  backgroundColor: 'transparent',\n                  borderColor: getStyle('--cui-success'),\n                  pointHoverBackgroundColor: getStyle('--cui-success'),\n                  borderWidth: 2,\n                  data: [\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                  ],\n                },\n                {\n                  label: 'My Third dataset',\n                  backgroundColor: 'transparent',\n                  borderColor: getStyle('--cui-danger'),\n                  pointHoverBackgroundColor: getStyle('--cui-danger'),\n                  borderWidth: 1,\n                  borderDash: [8, 5],\n                  data: [65, 65, 65, 65, 65, 65, 65],\n                },\n              ],\n            }}\n            options={{\n              maintainAspectRatio: false,\n              plugins: {\n                legend: {\n                  display: false,\n                },\n              },\n              scales: {\n                x: {\n                  grid: {\n                    drawOnChartArea: false,\n                  },\n                },\n                y: {\n                  ticks: {\n                    beginAtZero: true,\n                    maxTicksLimit: 5,\n                    stepSize: Math.ceil(250 / 5),\n                    max: 250,\n                  },\n                },\n              },\n              elements: {\n                line: {\n                  tension: 0.4,\n                },\n                point: {\n                  radius: 0,\n                  hitRadius: 10,\n                  hoverRadius: 4,\n                  hoverBorderWidth: 3,\n                },\n              },\n            }}\n          />\n        </CCardBody>\n        <CCardFooter>\n          <CRow xs={{ cols: 1 }} md={{ cols: 5 }} className=\"text-center\">\n            {progressExample.map((item, index) => (\n              <CCol className=\"mb-sm-2 mb-0\" key={index}>\n                <div className=\"text-medium-emphasis\">{item.title}</div>\n                <strong>\n                  {item.value} ({item.percent}%)\n                </strong>\n                <CProgress thin className=\"mt-2\" color={item.color} value={item.percent} />\n              </CCol>\n            ))}\n          </CRow>\n        </CCardFooter>\n      </CCard>\n\n      <WidgetsBrand withCharts />\n\n      <CRow>\n        <CCol xs>\n          <CCard className=\"mb-4\">\n            <CCardHeader>Traffic {' & '} Sales</CCardHeader>\n            <CCardBody>\n              <CRow>\n                <CCol xs={12} md={6} xl={6}>\n                  <CRow>\n                    <CCol sm={6}>\n                      <div className=\"border-start border-start-4 border-start-info py-1 px-3\">\n                        <div className=\"text-medium-emphasis small\">New Clients</div>\n                        <div className=\"fs-5 fw-semibold\">9,123</div>\n                      </div>\n                    </CCol>\n                    <CCol sm={6}>\n                      <div className=\"border-start border-start-4 border-start-danger py-1 px-3 mb-3\">\n                        <div className=\"text-medium-emphasis small\">Recurring Clients</div>\n                        <div className=\"fs-5 fw-semibold\">22,643</div>\n                      </div>\n                    </CCol>\n                  </CRow>\n\n                  <hr className=\"mt-0\" />\n                  {progressGroupExample1.map((item, index) => (\n                    <div className=\"progress-group mb-4\" key={index}>\n                      <div className=\"progress-group-prepend\">\n                        <span className=\"text-medium-emphasis small\">{item.title}</span>\n                      </div>\n                      <div className=\"progress-group-bars\">\n                        <CProgress thin color=\"info\" value={item.value1} />\n                        <CProgress thin color=\"danger\" value={item.value2} />\n                      </div>\n                    </div>\n                  ))}\n                </CCol>\n\n                <CCol xs={12} md={6} xl={6}>\n                  <CRow>\n                    <CCol sm={6}>\n                      <div className=\"border-start border-start-4 border-start-warning py-1 px-3 mb-3\">\n                        <div className=\"text-medium-emphasis small\">Pageviews</div>\n                        <div className=\"fs-5 fw-semibold\">78,623</div>\n                      </div>\n                    </CCol>\n                    <CCol sm={6}>\n                      <div className=\"border-start border-start-4 border-start-success py-1 px-3 mb-3\">\n                        <div className=\"text-medium-emphasis small\">Organic</div>\n                        <div className=\"fs-5 fw-semibold\">49,123</div>\n                      </div>\n                    </CCol>\n                  </CRow>\n\n                  <hr className=\"mt-0\" />\n\n                  {progressGroupExample2.map((item, index) => (\n                    <div className=\"progress-group mb-4\" key={index}>\n                      <div className=\"progress-group-header\">\n                        <CIcon className=\"me-2\" icon={item.icon} size=\"lg\" />\n                        <span>{item.title}</span>\n                        <span className=\"ms-auto fw-semibold\">{item.value}%</span>\n                      </div>\n                      <div className=\"progress-group-bars\">\n                        <CProgress thin color=\"warning\" value={item.value} />\n                      </div>\n                    </div>\n                  ))}\n\n                  <div className=\"mb-5\"></div>\n\n                  {progressGroupExample3.map((item, index) => (\n                    <div className=\"progress-group\" key={index}>\n                      <div className=\"progress-group-header\">\n                        <CIcon className=\"me-2\" icon={item.icon} size=\"lg\" />\n                        <span>{item.title}</span>\n                        <span className=\"ms-auto fw-semibold\">\n                          {item.value}{' '}\n                          <span className=\"text-medium-emphasis small\">({item.percent}%)</span>\n                        </span>\n                      </div>\n                      <div className=\"progress-group-bars\">\n                        <CProgress thin color=\"success\" value={item.percent} />\n                      </div>\n                    </div>\n                  ))}\n                </CCol>\n              </CRow>\n\n              <br />\n\n              <CTable align=\"middle\" className=\"mb-0 border\" hover responsive>\n                <CTableHead color=\"light\">\n                  <CTableRow>\n                    <CTableHeaderCell className=\"text-center\">\n                      <CIcon icon={cilPeople} />\n                    </CTableHeaderCell>\n                    <CTableHeaderCell>User</CTableHeaderCell>\n                    <CTableHeaderCell className=\"text-center\">Country</CTableHeaderCell>\n                    <CTableHeaderCell>Usage</CTableHeaderCell>\n                    <CTableHeaderCell className=\"text-center\">Payment Method</CTableHeaderCell>\n                    <CTableHeaderCell>Activity</CTableHeaderCell>\n                  </CTableRow>\n                </CTableHead>\n                <CTableBody>\n                  {tableExample.map((item, index) => (\n                    <CTableRow v-for=\"item in tableItems\" key={index}>\n                      <CTableDataCell className=\"text-center\">\n                        <CAvatar size=\"md\" src={item.avatar.src} status={item.avatar.status} />\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <div>{item.user.name}</div>\n                        <div className=\"small text-medium-emphasis\">\n                          <span>{item.user.new ? 'New' : 'Recurring'}</span> | Registered:{' '}\n                          {item.user.registered}\n                        </div>\n                      </CTableDataCell>\n                      <CTableDataCell className=\"text-center\">\n                        <CIcon size=\"xl\" icon={item.country.flag} title={item.country.name} />\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <div className=\"clearfix\">\n                          <div className=\"float-start\">\n                            <strong>{item.usage.value}%</strong>\n                          </div>\n                          <div className=\"float-end\">\n                            <small className=\"text-medium-emphasis\">{item.usage.period}</small>\n                          </div>\n                        </div>\n                        <CProgress thin color={item.usage.color} value={item.usage.value} />\n                      </CTableDataCell>\n                      <CTableDataCell className=\"text-center\">\n                        <CIcon size=\"xl\" icon={item.payment.icon} />\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <div className=\"small text-medium-emphasis\">Last login</div>\n                        <strong>{item.activity}</strong>\n                      </CTableDataCell>\n                    </CTableRow>\n                  ))}\n                </CTableBody>\n              </CTable>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default Dashboard\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { CWidgetStatsD, CRow, CCol } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cibFacebook, cibLinkedin, cibTwitter, cilCalendar } from '@coreui/icons'\nimport { CChart } from '@coreui/react-chartjs'\n\nconst WidgetsBrand = ({ withCharts }) => {\n  const chartOptions = {\n    elements: {\n      line: {\n        tension: 0.4,\n      },\n      point: {\n        radius: 0,\n        hitRadius: 10,\n        hoverRadius: 4,\n        hoverBorderWidth: 3,\n      },\n    },\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: false,\n      },\n    },\n    scales: {\n      x: {\n        display: false,\n      },\n      y: {\n        display: false,\n      },\n    },\n  }\n\n  return (\n    <CRow>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsD\n          className=\"mb-4\"\n          {...(withCharts && {\n            chart: (\n              <CChart\n                className=\"position-absolute w-100 h-100\"\n                type=\"line\"\n                data={{\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                  datasets: [\n                    {\n                      backgroundColor: 'rgba(255,255,255,.1)',\n                      borderColor: 'rgba(255,255,255,.55)',\n                      pointHoverBackgroundColor: '#fff',\n                      borderWidth: 2,\n                      data: [65, 59, 84, 84, 51, 55, 40],\n                      fill: true,\n                    },\n                  ],\n                }}\n                options={chartOptions}\n              />\n            ),\n          })}\n          icon={<CIcon icon={cibFacebook} height={52} className=\"my-4 text-white\" />}\n          values={[\n            { title: 'friends', value: '89K' },\n            { title: 'feeds', value: '459' },\n          ]}\n          style={{\n            '--cui-card-cap-bg': '#3b5998',\n          }}\n        />\n      </CCol>\n\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsD\n          className=\"mb-4\"\n          {...(withCharts && {\n            chart: (\n              <CChart\n                className=\"position-absolute w-100 h-100\"\n                type=\"line\"\n                data={{\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                  datasets: [\n                    {\n                      backgroundColor: 'rgba(255,255,255,.1)',\n                      borderColor: 'rgba(255,255,255,.55)',\n                      pointHoverBackgroundColor: '#fff',\n                      borderWidth: 2,\n                      data: [1, 13, 9, 17, 34, 41, 38],\n                      fill: true,\n                    },\n                  ],\n                }}\n                options={chartOptions}\n              />\n            ),\n          })}\n          icon={<CIcon icon={cibTwitter} height={52} className=\"my-4 text-white\" />}\n          values={[\n            { title: 'followers', value: '973k' },\n            { title: 'tweets', value: '1.792' },\n          ]}\n          style={{\n            '--cui-card-cap-bg': '#00aced',\n          }}\n        />\n      </CCol>\n\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsD\n          className=\"mb-4\"\n          {...(withCharts && {\n            chart: (\n              <CChart\n                className=\"position-absolute w-100 h-100\"\n                type=\"line\"\n                data={{\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                  datasets: [\n                    {\n                      backgroundColor: 'rgba(255,255,255,.1)',\n                      borderColor: 'rgba(255,255,255,.55)',\n                      pointHoverBackgroundColor: '#fff',\n                      borderWidth: 2,\n                      data: [78, 81, 80, 45, 34, 12, 40],\n                      fill: true,\n                    },\n                  ],\n                }}\n                options={chartOptions}\n              />\n            ),\n          })}\n          icon={<CIcon icon={cibLinkedin} height={52} className=\"my-4 text-white\" />}\n          values={[\n            { title: 'contacts', value: '500' },\n            { title: 'feeds', value: '1.292' },\n          ]}\n          style={{\n            '--cui-card-cap-bg': '#4875b4',\n          }}\n        />\n      </CCol>\n\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsD\n          className=\"mb-4\"\n          color=\"warning\"\n          {...(withCharts && {\n            chart: (\n              <CChart\n                className=\"position-absolute w-100 h-100\"\n                type=\"line\"\n                data={{\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                  datasets: [\n                    {\n                      backgroundColor: 'rgba(255,255,255,.1)',\n                      borderColor: 'rgba(255,255,255,.55)',\n                      pointHoverBackgroundColor: '#fff',\n                      borderWidth: 2,\n                      data: [35, 23, 56, 22, 97, 23, 64],\n                      fill: true,\n                    },\n                  ],\n                }}\n                options={chartOptions}\n              />\n            ),\n          })}\n          icon={<CIcon icon={cilCalendar} height={52} className=\"my-4 text-white\" />}\n          values={[\n            { title: 'events', value: '12+' },\n            { title: 'meetings', value: '4' },\n          ]}\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nWidgetsBrand.propTypes = {\n  withCharts: PropTypes.bool,\n}\n\nexport default WidgetsBrand\n","import React from 'react'\nimport {\n  CRow,\n  CCol,\n  CDropdown,\n  CDropdownMenu,\n  CDropdownItem,\n  CDropdownToggle,\n  CWidgetStatsA,\n} from '@coreui/react'\nimport { getStyle } from '@coreui/utils'\nimport { CChartBar, CChartLine } from '@coreui/react-chartjs'\nimport CIcon from '@coreui/icons-react'\nimport { cilArrowBottom, cilArrowTop, cilOptions } from '@coreui/icons'\n\nconst WidgetsDropdown = () => {\n  return (\n    <CRow>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"primary\"\n          value={\n            <>\n              26K{' '}\n              <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span>\n            </>\n          }\n          title=\"Users\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-primary'),\n                    data: [65, 59, 84, 84, 51, 55, 40],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: 30,\n                    max: 89,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"info\"\n          value={\n            <>\n              $6.200{' '}\n              <span className=\"fs-6 fw-normal\">\n                (40.9% <CIcon icon={cilArrowTop} />)\n              </span>\n            </>\n          }\n          title=\"Income\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-info'),\n                    data: [1, 18, 9, 17, 34, 22, 11],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: -9,\n                    max: 39,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"warning\"\n          value={\n            <>\n              2.49{' '}\n              <span className=\"fs-6 fw-normal\">\n                (84.7% <CIcon icon={cilArrowTop} />)\n              </span>\n            </>\n          }\n          title=\"Conversion Rate\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              className=\"mt-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [78, 81, 80, 45, 34, 12, 40],\n                    fill: true,\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    display: false,\n                  },\n                  y: {\n                    display: false,\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 2,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 0,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"danger\"\n          value={\n            <>\n              44K{' '}\n              <span className=\"fs-6 fw-normal\">\n                (-23.6% <CIcon icon={cilArrowBottom} />)\n              </span>\n            </>\n          }\n          title=\"Sessions\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartBar\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: [\n                  'January',\n                  'February',\n                  'March',\n                  'April',\n                  'May',\n                  'June',\n                  'July',\n                  'August',\n                  'September',\n                  'October',\n                  'November',\n                  'December',\n                  'January',\n                  'February',\n                  'March',\n                  'April',\n                ],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [78, 81, 80, 45, 34, 12, 40, 85, 65, 23, 12, 98, 34, 84, 67, 82],\n                    barPercentage: 0.6,\n                  },\n                ],\n              }}\n              options={{\n                maintainAspectRatio: false,\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default WidgetsDropdown\n"],"names":["random","min","max","Math","floor","progressGroupExample2","title","icon","cilUser","value","cilUserFemale","progressGroupExample3","cibGoogle","percent","cibFacebook","cibTwitter","cibLinkedin","tableExample","avatar","src","avatar1","status","user","name","new","registered","country","flag","cifUs","usage","period","color","payment","cibCcMastercard","activity","avatar2","cifBr","cibCcVisa","avatar3","cifIn","cibCcStripe","avatar4","cifFr","cibCcPaypal","avatar5","cifEs","cibCcApplePay","avatar6","cifPl","cibCcAmex","WidgetsDropdown","className","sm","id","cilCloudDownload","map","active","style","height","marginTop","data","labels","datasets","label","backgroundColor","hexToRgba","getStyle","borderColor","pointHoverBackgroundColor","borderWidth","fill","borderDash","options","maintainAspectRatio","plugins","legend","display","scales","x","grid","drawOnChartArea","y","ticks","beginAtZero","maxTicksLimit","stepSize","ceil","elements","line","tension","point","radius","hitRadius","hoverRadius","hoverBorderWidth","xs","cols","md","item","index","thin","WidgetsBrand","withCharts","xl","value1","value2","size","align","hover","responsive","cilPeople","chartOptions","lg","chart","type","values","cilCalendar","cilArrowBottom","action","alignment","caret","cilOptions","disabled","pointBackgroundColor","drawBorder","cilArrowTop","barPercentage","drawTicks"],"sourceRoot":""}