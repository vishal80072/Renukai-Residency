{"version":3,"file":"static/js/6027.58eec304.chunk.js","mappings":"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","sources":["views/forms/floating-labels/FloatingLabels.js"],"sourcesContent":["import React from 'react'\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CFormInput,\n  CFormLabel,\n  CFormFloating,\n  CFormSelect,\n  CFormTextarea,\n  CRow,\n} from '@coreui/react'\nimport { DocsExample } from 'src/components'\n\nconst FloatingLabels = () => {\n  return (\n    <CRow>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Floating labels</strong>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Wrap a pair of <code>&lt;CFormInput&gt;</code> and <code>&lt;CFormLabel&gt;</code>{' '}\n              elements in <code>CFormFloating</code> to enable floating labels with textual form\n              fields. A <code>placeholder</code> is required on each <code>&lt;CFormInput&gt;</code>{' '}\n              as our method of CSS-only floating labels uses the <code>:placeholder-shown</code>{' '}\n              pseudo-element. Also note that the <code>&lt;CFormInput&gt;</code> must come first so\n              we can utilize a sibling selector (e.g., <code>~</code>).\n            </p>\n            <DocsExample href=\"forms/floating-labels\">\n              <CFormFloating className=\"mb-3\">\n                <CFormInput type=\"email\" id=\"floatingInput\" placeholder=\"name@example.com\" />\n                <CFormLabel htmlFor=\"floatingInput\">Email address</CFormLabel>\n              </CFormFloating>\n              <CFormFloating>\n                <CFormInput type=\"password\" id=\"floatingPassword\" placeholder=\"Password\" />\n                <CFormLabel htmlFor=\"floatingPassword\">Password</CFormLabel>\n              </CFormFloating>\n            </DocsExample>\n            <p className=\"text-medium-emphasis small\">\n              When there&#39;s a <code>value</code> already defined, <code>&lt;CFormLabel&gt;</code>\n              s will automatically adjust to their floated position.\n            </p>\n            <DocsExample href=\"forms/floating-labels\">\n              <CFormFloating>\n                <CFormInput\n                  type=\"email\"\n                  id=\"floatingInputValue\"\n                  placeholder=\"name@example.com\"\n                  defaultValue=\"test@example.com\"\n                />\n                <CFormLabel htmlFor=\"floatingInputValue\">Input with value</CFormLabel>\n              </CFormFloating>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Floating labels</strong> <small>Textareas</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              By default, <code>&lt;CFormTextarea&gt;</code>s will be the same height as{' '}\n              <code>&lt;CFormInput&gt;</code>s.\n            </p>\n            <DocsExample href=\"forms/floating-labels#textareas\">\n              <CFormFloating>\n                <CFormTextarea\n                  id=\"floatingTextarea\"\n                  placeholder=\"Leave a comment here\"\n                ></CFormTextarea>\n                <CFormLabel htmlFor=\"floatingTextarea\">Comments</CFormLabel>\n              </CFormFloating>\n            </DocsExample>\n            <p className=\"text-medium-emphasis small\">\n              To set a custom height on your <code>&lt;CFormTextarea;&gt;</code>, do not use the{' '}\n              <code>rows</code> attribute. Instead, set an explicit <code>height</code> (either\n              inline or via custom CSS).\n            </p>\n            <DocsExample href=\"forms/floating-labels#textareas\">\n              <CFormFloating>\n                <CFormTextarea\n                  placeholder=\"Leave a comment here\"\n                  id=\"floatingTextarea2\"\n                  style={{ height: '100px' }}\n                ></CFormTextarea>\n                <CFormLabel htmlFor=\"floatingTextarea2\">Comments</CFormLabel>\n              </CFormFloating>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Floating labels</strong> <small>Selects</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Other than <code>&lt;CFormInput&gt;</code>, floating labels are only available on{' '}\n              <code>&lt;CFormSelect&gt;</code>s. They work in the same way, but unlike{' '}\n              <code>&lt;CFormInput&gt;</code>s, they&#39;ll always show the{' '}\n              <code>&lt;CFormLabel&gt;</code> in its floated state.{' '}\n              <strong>\n                Selects with <code>size</code> and <code>multiple</code> are not supported.\n              </strong>\n            </p>\n            <DocsExample href=\"forms/floating-labels#selects\">\n              <CFormFloating>\n                <CFormSelect id=\"floatingSelect\" aria-label=\"Floating label select example\">\n                  <option>Open this select menu</option>\n                  <option value=\"1\">One</option>\n                  <option value=\"2\">Two</option>\n                  <option value=\"3\">Three</option>\n                </CFormSelect>\n                <CFormLabel htmlFor=\"floatingSelect\">Works with selects</CFormLabel>\n              </CFormFloating>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Floating labels</strong> <small>Layout</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              When working with the CoreUI for Bootstrap grid system, be sure to place form elements\n              within column classes.\n            </p>\n            <DocsExample href=\"forms/floating-labels#layout\">\n              <CRow xs={{ gutter: 2 }}>\n                <CCol md>\n                  <CFormFloating>\n                    <CFormInput\n                      type=\"email\"\n                      id=\"floatingInputGrid\"\n                      placeholder=\"name@example.com\"\n                      defaultValue=\"email@example.com\"\n                    />\n                    <CFormLabel htmlFor=\"floatingInputGrid\">Email address</CFormLabel>\n                  </CFormFloating>\n                </CCol>\n                <CCol md>\n                  <CFormFloating>\n                    <CFormSelect id=\"floatingSelectGrid\" aria-label=\"Floating label select example\">\n                      <option>Open this select menu</option>\n                      <option value=\"1\">One</option>\n                      <option value=\"2\">Two</option>\n                      <option value=\"3\">Three</option>\n                    </CFormSelect>\n                    <CFormLabel htmlFor=\"floatingSelectGrid\">Works with selects</CFormLabel>\n                  </CFormFloating>\n                </CCol>\n              </CRow>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default FloatingLabels\n"],"names":["xs","className","href","type","id","placeholder","htmlFor","defaultValue","style","height","value","gutter","md"],"sourceRoot":""}